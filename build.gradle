plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.3-SNAPSHOT" apply false
    //id "com.github.johnrengelman.shadow" version '7.1.2' apply true

    // Plugin to create merged jars
    id "io.github.pacifistmc.forgix" version "1.2.6"

}
architectury {
    minecraft = rootProject.minecraft_version
}

forgix {
    group = "smartin.miapi"
    mergedJarName = "Truly-Modular-miapi-${rootProject.mod_version}-${rootProject.minecraft_version}.jar"
}

tasks.register('clean-builds') {
    dependsOn(':forge:clean',':fabric:clean')
    doLast {
        println "Cleaned previous build"
    }
}

tasks.register('buildBoth') {
    dependsOn('clean-builds', ':fabric:build', ':forge:build')
    doLast {
        def modVersion = rootProject.mod_version
        def minecraftVersion = rootProject.minecraft_version
        def fabricBuild = project(':fabric').tasks.getByName('jar').archivePath
        def forgeBuild = project(':forge').tasks.getByName('jar').archivePath

        copy {
            from fabricBuild
            into project.file("build/libs")
            rename { fileName ->
                "Truly-Modular-miapi-${modVersion}-${minecraftVersion}-fabric.jar"
            }
        }

        copy {
            from forgeBuild
            into project.file("build/libs")
            rename { fileName ->
                "Truly-Modular-miapi-${modVersion}-${minecraftVersion}-forge.jar"
            }
        }

        println "Build completed"
    }
}

tasks.register('buildMerged') {
    dependsOn('clean-builds',':fabric:build', ':forge:build')
    doLast {
        println "Build completed"
    }
    finalizedBy ':mergeJars'
}


subprojects {
    apply plugin: "dev.architectury.loom"

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        mappings "net.fabricmc:yarn:1.20.1+build.10:v2"
        implementation "org.mariuszgromada.math:MathParser.org-mXparser:${rootProject.mathparser_version}"
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = rootProject.archives_base_name
    version = rootProject.mod_version
    group = rootProject.maven_group

    repositories {
        maven {
            url "https://maven.fabricmc.net/"
        }
    }
    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 17
    }

    java {
        withSourcesJar()
    }
}