repositories {
    maven { url 'https://maven.kosmx.dev/' }
    maven { url 'https://maven.shedaniel.me/' }
    maven { url 'https://maven.fabricmc.net/' }
    maven { url 'https://jitpack.io' }
    maven { url 'https://maven.terraformersmc.com/' }
    maven { url 'https://www.cursemaven.com' }
    maven {
        name = 'Modrinth'
        url = 'https://api.modrinth.com/maven'
        content {
            includeGroup 'maven.modrinth'
        }
    }

}

loom {
    accessWidenerPath = file("src/main/resources/miapi.accesswidener")
}

dependencies {
    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    // Remove the next line if you don't want to depend on the API
    modApi "dev.architectury:architectury:${rootProject.architectury_version}"

    modApi("com.github.RedPxnda.Nucleus:nucleus:${rootProject.nucleus_version}")

    implementation('org.mariuszgromada.math:MathParser.org-mXparser:4.4.2')
    modImplementation 'dev.kosmx.player-anim:player-animation-lib:1.0.2-rc1+1.20'
    modApi "curse.maven:bettercombat-639842:4597949"

    modApi("me.shedaniel.cloth:cloth-config-fabric:${rootProject.cloth_config_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
}

architectury {
    common()
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = rootProject.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
    }
}